{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\firnaz\\\\OneDrive\\\\Documents\\\\NEXT_PROJECT\\\\learn-nextjs\\\\meetup-app\\\\pages\\\\index.js\";\n// client side\nimport MeetUpList from \"../components/meetups/MeetupList\"; // server side\n\nimport { getDatabaseClient } from './constant';\n\nfunction HomePage(props) {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(MeetUpList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n} // both getServerSideProps and getStaticProps can be async\n// code wont be run in client side, only on server\n// makes it best for authentication key or other purposes that clients side dont need to see\n// // better for data that changes frequently or change multiple time every request\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   console.log(req, res);\n//   // fetch data from api\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   }\n// }\n// Static Site Generator (SSG)\n// Server Side Rendering (SSR)\n// faster can define revalidate when to request\n\n\nexport async function getStaticProps() {\n  // fetch GET here\n  const meetupsCollection = getDatabaseClient();\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(item => ({\n        title: item.title,\n        address: item.address,\n        image: item.image,\n        id: item._id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/firnaz/OneDrive/Documents/NEXT_PROJECT/learn-nextjs/meetup-app/pages/index.js"],"names":["MeetUpList","getDatabaseClient","HomePage","props","console","log","meetups","getStaticProps","meetupsCollection","find","toArray","client","close","map","item","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA;AACA,OAAOA,UAAP,MAAuB,kCAAvB,C,CACA;;AACA,SAASC,iBAAT,QAAkC,YAAlC;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACG;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,iBAAiB,GAAGP,iBAAiB,EAA3C;AACA,QAAMK,OAAO,GAAG,MAAME,iBAAiB,CAACC,IAAlB,GAAyBC,OAAzB,EAAtB;AACAC,EAAAA,MAAM,CAACC,KAAP;AAEA,SAAO;AACLT,IAAAA,KAAK,EAAE;AACLG,MAAAA,OAAO,EAAEA,OAAO,CAACO,GAAR,CAAYC,IAAI,KAAK;AAC5BC,QAAAA,KAAK,EAAED,IAAI,CAACC,KADgB;AAE5BC,QAAAA,OAAO,EAAEF,IAAI,CAACE,OAFc;AAG5BC,QAAAA,KAAK,EAAEH,IAAI,CAACG,KAHgB;AAI5BC,QAAAA,EAAE,EAAEJ,IAAI,CAACK,GAAL,CAASC,QAAT;AAJwB,OAAL,CAAhB;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE;AATP,GAAP;AAWD;AAED,eAAenB,QAAf","sourcesContent":["// client side\r\nimport MeetUpList from \"../components/meetups/MeetupList\";\r\n// server side\r\nimport { getDatabaseClient } from './constant';\r\n\r\nfunction HomePage(props) {\r\n  console.log(props);\r\n  return <MeetUpList meetups={props.meetups} />;\r\n}\r\n\r\n// both getServerSideProps and getStaticProps can be async\r\n// code wont be run in client side, only on server\r\n// makes it best for authentication key or other purposes that clients side dont need to see\r\n\r\n// // better for data that changes frequently or change multiple time every request\r\n// export async function getServerSideProps(context) {\r\n//   const req = context.req;\r\n//   const res = context.res;\r\n//   console.log(req, res);\r\n//   // fetch data from api\r\n//   return {\r\n//     props: {\r\n//       meetups: DUMMY_MEETUPS\r\n//     }\r\n//   }\r\n// }\r\n\r\n// Static Site Generator (SSG)\r\n// Server Side Rendering (SSR)\r\n// faster can define revalidate when to request\r\nexport async function getStaticProps() {\r\n  // fetch GET here\r\n  const meetupsCollection = getDatabaseClient()\r\n  const meetups = await meetupsCollection.find().toArray();\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetups: meetups.map(item => ({\r\n        title: item.title,\r\n        address: item.address,\r\n        image: item.image,\r\n        id: item._id.toString(),\r\n      })),\r\n    },\r\n    revalidate: 1,\r\n  };\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}