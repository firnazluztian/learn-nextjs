{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\firnaz\\\\OneDrive\\\\Documents\\\\NEXT_PROJECT\\\\learn-nextjs\\\\meetup-app\\\\pages\\\\index.js\";\nimport MeetUpList from \"../components/meetups/MeetupList\";\nimport { MongoClient } from \"mongodb\";\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"First Meetup\",\n  image: \"https://pix10.agoda.net/hotelImages/4869553/0/35b103e869655a2959fac36f614fa08e.jpg?s=1024x768\",\n  address: \"kuta beach, Bali\",\n  description: \"this is bali in here we have so many beaches\"\n}, {\n  id: \"m2\",\n  title: \"First Meetup\",\n  image: \"https://pix10.agoda.net/hotelImages/4869553/0/35b103e869655a2959fac36f614fa08e.jpg?s=1024x768\",\n  address: \"kuta beach, Bali\",\n  description: \"this is bali in here we have so many beaches\"\n}, {\n  id: \"m3\",\n  title: \"First Meetup\",\n  image: \"https://pix10.agoda.net/hotelImages/4869553/0/35b103e869655a2959fac36f614fa08e.jpg?s=1024x768\",\n  address: \"kuta beach, Bali\",\n  description: \"this is bali in here we have so many beaches\"\n}];\n\nfunction HomePage(props) {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(MeetUpList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n} // both getServerSideProps and getStaticProps can be async\n// code wont be run in client side, only on server\n// makes it best for authentication key or other purposes that clients side dont need to see\n// // better for data that changes frequently or change multiple time every request\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   console.log(req, res);\n//   // fetch data from api\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   }\n// }\n// Static Site Generator (SSG)\n// Server Side Rendering (SSR)\n// faster can define revalidate when to request\n\n\nexport async function getStaticProps() {\n  // fetch GET here\n  const username = \"dbMeetupAdmin\";\n  const generatedPassword = \"ITasN2HACL80fhiV\";\n  const dbName = \"meetups\";\n  const client = await MongoClient.connect(`mongodb+srv://${username}:${generatedPassword}@clustermeetupnextjs.nuwrz.mongodb.net/${dbName}?retryWrites=true&w=majority`);\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups\n    },\n    revalidate: 1\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/firnaz/OneDrive/Documents/NEXT_PROJECT/learn-nextjs/meetup-app/pages/index.js"],"names":["MeetUpList","MongoClient","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","console","log","meetups","getStaticProps","username","generatedPassword","dbName","client","connect","db","meetupsCollection","collection","find","toArray","close","revalidate"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,cAFT;AAGEC,EAAAA,KAAK,EACH,+FAJJ;AAKEC,EAAAA,OAAO,EAAE,kBALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CADoB,EASpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,cAFT;AAGEC,EAAAA,KAAK,EACH,+FAJJ;AAKEC,EAAAA,OAAO,EAAE,kBALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CAToB,EAiBpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,cAFT;AAGEC,EAAAA,KAAK,EACH,+FAJJ;AAKEC,EAAAA,OAAO,EAAE,kBALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CAjBoB,CAAtB;;AA2BA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACG;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,QAAQ,GAAG,eAAjB;AACA,QAAMC,iBAAiB,GAAG,kBAA1B;AACA,QAAMC,MAAM,GAAG,SAAf;AAEA,QAAMC,MAAM,GAAG,MAAMhB,WAAW,CAACiB,OAAZ,CAClB,iBAAgBJ,QAAS,IAAGC,iBAAkB,0CAAyCC,MAAO,8BAD5E,CAArB;AAGA,QAAMG,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMT,OAAO,GAAG,MAAMQ,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AACAN,EAAAA,MAAM,CAACO,KAAP;AACA,SAAO;AACLf,IAAAA,KAAK,EAAE;AACLG,MAAAA,OAAO,EAAEA;AADJ,KADF;AAILa,IAAAA,UAAU,EAAE;AAJP,GAAP;AAMD;AAED,eAAejB,QAAf","sourcesContent":["import MeetUpList from \"../components/meetups/MeetupList\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nconst DUMMY_MEETUPS = [\r\n  {\r\n    id: \"m1\",\r\n    title: \"First Meetup\",\r\n    image:\r\n      \"https://pix10.agoda.net/hotelImages/4869553/0/35b103e869655a2959fac36f614fa08e.jpg?s=1024x768\",\r\n    address: \"kuta beach, Bali\",\r\n    description: \"this is bali in here we have so many beaches\",\r\n  },\r\n  {\r\n    id: \"m2\",\r\n    title: \"First Meetup\",\r\n    image:\r\n      \"https://pix10.agoda.net/hotelImages/4869553/0/35b103e869655a2959fac36f614fa08e.jpg?s=1024x768\",\r\n    address: \"kuta beach, Bali\",\r\n    description: \"this is bali in here we have so many beaches\",\r\n  },\r\n  {\r\n    id: \"m3\",\r\n    title: \"First Meetup\",\r\n    image:\r\n      \"https://pix10.agoda.net/hotelImages/4869553/0/35b103e869655a2959fac36f614fa08e.jpg?s=1024x768\",\r\n    address: \"kuta beach, Bali\",\r\n    description: \"this is bali in here we have so many beaches\",\r\n  },\r\n];\r\n\r\nfunction HomePage(props) {\r\n  console.log(props);\r\n  return <MeetUpList meetups={props.meetups} />;\r\n}\r\n\r\n// both getServerSideProps and getStaticProps can be async\r\n// code wont be run in client side, only on server\r\n// makes it best for authentication key or other purposes that clients side dont need to see\r\n\r\n// // better for data that changes frequently or change multiple time every request\r\n// export async function getServerSideProps(context) {\r\n//   const req = context.req;\r\n//   const res = context.res;\r\n//   console.log(req, res);\r\n//   // fetch data from api\r\n//   return {\r\n//     props: {\r\n//       meetups: DUMMY_MEETUPS\r\n//     }\r\n//   }\r\n// }\r\n\r\n// Static Site Generator (SSG)\r\n// Server Side Rendering (SSR)\r\n// faster can define revalidate when to request\r\nexport async function getStaticProps() {\r\n  // fetch GET here\r\n  const username = \"dbMeetupAdmin\";\r\n  const generatedPassword = \"ITasN2HACL80fhiV\";\r\n  const dbName = \"meetups\";\r\n\r\n  const client = await MongoClient.connect(\r\n    `mongodb+srv://${username}:${generatedPassword}@clustermeetupnextjs.nuwrz.mongodb.net/${dbName}?retryWrites=true&w=majority`\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find().toArray();\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetups: meetups,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}