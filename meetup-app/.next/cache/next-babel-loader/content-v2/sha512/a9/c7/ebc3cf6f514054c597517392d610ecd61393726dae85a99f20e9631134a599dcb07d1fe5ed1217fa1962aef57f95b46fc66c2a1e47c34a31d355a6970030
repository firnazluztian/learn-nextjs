{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/firnaz/OneDrive/Documents/NEXT_PROJECT/learn-nextjs/meetup-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/firnaz/OneDrive/Documents/NEXT_PROJECT/learn-nextjs/meetup-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { MongoClient } from 'mongodb';\nexport var getClient = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var username, generatedPassword, dbName, client;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            username = 'dbMeetupAdmin';\n            generatedPassword = 'ITasN2HACL80fhiV';\n            dbName = 'meetups';\n            _context.next = 5;\n            return MongoClient.connect(\"mongodb+srv://\".concat(username, \":\").concat(generatedPassword, \"@clustermeetupnextjs.nuwrz.mongodb.net/\").concat(dbName, \"?retryWrites=true&w=majority\"));\n\n          case 5:\n            client = _context.sent;\n            return _context.abrupt(\"return\", client);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getClient() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getCollection = function getCollection() {\n  var client = getDatabaseClient();\n  var db = client.db();\n  var meetupsCollection = db.collection('meetups');\n  return meetupsCollection;\n};","map":{"version":3,"sources":["C:/Users/firnaz/OneDrive/Documents/NEXT_PROJECT/learn-nextjs/meetup-app/pages/constant.js"],"names":["MongoClient","getClient","username","generatedPassword","dbName","connect","client","getCollection","getDatabaseClient","db","meetupsCollection","collection"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAO,IAAMC,SAAS;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,YAAAA,QADiB,GACN,eADM;AAEjBC,YAAAA,iBAFiB,GAEG,kBAFH;AAGjBC,YAAAA,MAHiB,GAGR,SAHQ;AAAA;AAAA,mBAKFJ,WAAW,CAACK,OAAZ,yBACFH,QADE,cACUC,iBADV,oDACqEC,MADrE,kCALE;;AAAA;AAKjBE,YAAAA,MALiB;AAAA,6CAQhBA,MARgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATL,SAAS;AAAA;AAAA;AAAA,GAAf;AAWP,OAAO,IAAMM,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACjC,MAAMD,MAAM,GAAGE,iBAAiB,EAAhC;AACA,MAAMC,EAAE,GAAGH,MAAM,CAACG,EAAP,EAAX;AACA,MAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,SAAOD,iBAAP;AACD,CANM","sourcesContent":["import { MongoClient } from 'mongodb';\r\n\r\nexport const getClient = async () => {\r\n  const username = 'dbMeetupAdmin';\r\n  const generatedPassword = 'ITasN2HACL80fhiV';\r\n  const dbName = 'meetups'\r\n\r\n  const client = await MongoClient.connect(\r\n    `mongodb+srv://${username}:${generatedPassword}@clustermeetupnextjs.nuwrz.mongodb.net/${dbName}?retryWrites=true&w=majority`)\r\n  \r\n  return client;\r\n}\r\n\r\nexport const getCollection = () => {\r\n  const client = getDatabaseClient();\r\n  const db = client.db()\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  return meetupsCollection;\r\n}"]},"metadata":{},"sourceType":"module"}